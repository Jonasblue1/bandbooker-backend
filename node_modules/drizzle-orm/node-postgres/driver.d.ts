import { Logger } from '../logger';
import { PgDatabase } from '../pg-core/db';
import { PgDialect } from '../pg-core/dialect';
import { NodePgClient, NodePgQueryResultHKT, NodePgSession } from './session';
export interface PgDriverOptions {
    logger?: Logger;
}
export declare class NodePgDriver {
    private client;
    private dialect;
    private options;
    constructor(client: NodePgClient, dialect: PgDialect, options?: PgDriverOptions);
    createSession(): NodePgSession;
    initMappers(): void;
}
export interface DrizzleConfig {
    logger?: boolean | Logger;
}
export declare type NodePgDatabase = PgDatabase<NodePgQueryResultHKT, NodePgSession>;
export declare function drizzle(client: NodePgClient, config?: DrizzleConfig): NodePgDatabase;
//# sourceMappingURL=driver.d.ts.map