import { Check } from './checks';
import { AnyMySqlColumn } from './columns';
import { ForeignKey } from './foreign-keys';
import { Index } from './indexes';
import { AnyMySqlTable, GetTableConfig } from './table';
export declare function getTableConfig<TTable extends AnyMySqlTable>(table: TTable): {
    columns: AnyMySqlColumn<{
        tableName: GetTableConfig<TTable, "name">;
    }>[];
    indexes: Index[];
    foreignKeys: ForeignKey[];
    checks: Check[];
    name: string;
    schema: string | undefined;
};
export interface GetTableColumnsConfig<TFormat extends 'object' | 'array' = 'object' | 'array'> {
    format: TFormat;
}
export declare function getTableColumns<TTable extends AnyMySqlTable>(table: TTable, config: GetTableColumnsConfig<'object'>): Record<string, AnyMySqlColumn<{
    tableName: GetTableConfig<TTable, 'name'>;
}>>;
export declare function getTableColumns<TTable extends AnyMySqlTable>(table: TTable, config?: GetTableColumnsConfig<'array'>): AnyMySqlColumn<{
    tableName: GetTableConfig<TTable, 'name'>;
}>[];
export declare function getTableIndexes<TTable extends AnyMySqlTable>(table: TTable): Index[];
export declare function getTableForeignKeys<TTable extends AnyMySqlTable>(table: TTable): ForeignKey[];
export declare function getTableChecks<TTable extends AnyMySqlTable>(table: TTable): Check[];
//# sourceMappingURL=utils.d.ts.map