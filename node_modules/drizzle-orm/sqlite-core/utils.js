"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getTableChecks = exports.getTableCompositePrimaryKeys = exports.getTableForeignKeys = exports.getTableIndexes = exports.getTableColumns = void 0;
const table_1 = require("./table");
function getTableColumns(table, config) {
    const columns = table[table_1.SQLiteTable.Symbol.Columns];
    if ((config === null || config === void 0 ? void 0 : config.format) === 'object') {
        return Object.assign({}, columns);
    }
    return Object.values(columns);
}
exports.getTableColumns = getTableColumns;
function getTableIndexes(table) {
    const indexes = table[table_1.SQLiteTable.Symbol.Indexes];
    const keys = Reflect.ownKeys(indexes);
    return keys.map((key) => indexes[key]);
}
exports.getTableIndexes = getTableIndexes;
function getTableForeignKeys(table) {
    const foreignKeys = table[table_1.SQLiteTable.Symbol.ForeignKeys];
    const keys = Reflect.ownKeys(foreignKeys);
    return keys.map((key) => foreignKeys[key]);
}
exports.getTableForeignKeys = getTableForeignKeys;
function getTableCompositePrimaryKeys(table) {
    const primaryKeys = table[table_1.SQLiteTable.Symbol.PrimaryKeys];
    const keys = Reflect.ownKeys(primaryKeys);
    return keys.map((key) => primaryKeys[key]);
}
exports.getTableCompositePrimaryKeys = getTableCompositePrimaryKeys;
function getTableChecks(table) {
    const checks = table[table_1.SQLiteTable.Symbol.Checks];
    const keys = Reflect.ownKeys(checks);
    return keys.map((key) => checks[key]);
}
exports.getTableChecks = getTableChecks;
//# sourceMappingURL=utils.js.map