import { Logger } from '../../logger';
import { PgDatabase } from '../../pg-core/db';
import { PgDialect } from '../../pg-core/dialect';
import { AwsDataApiClient, AwsDataApiPgQueryResultHKT, AwsDataApiSession } from './session';
export interface PgDriverOptions {
    logger?: Logger;
    database: string;
    resourceArn: string;
    secretArn: string;
}
export declare class AwsDataApiDriver {
    private client;
    private dialect;
    private options;
    constructor(client: AwsDataApiClient, dialect: PgDialect, options: PgDriverOptions);
    createSession(): AwsDataApiSession;
}
export interface DrizzleConfig {
    logger?: boolean | Logger;
    database: string;
    resourceArn: string;
    secretArn: string;
}
export declare type AwsDataApiPgDatabase = PgDatabase<AwsDataApiPgQueryResultHKT, AwsDataApiSession>;
export declare class AwsPgDialect extends PgDialect {
    escapeName(name: string): string;
    escapeParam(num: number): string;
}
export declare function drizzle(client: AwsDataApiClient, config: DrizzleConfig): AwsDataApiPgDatabase;
//# sourceMappingURL=driver.d.ts.map