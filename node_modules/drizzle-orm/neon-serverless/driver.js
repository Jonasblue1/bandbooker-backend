"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.drizzle = exports.NeonDriver = void 0;
const serverless_1 = require("@neondatabase/serverless");
const logger_1 = require("../logger");
const db_1 = require("../pg-core/db");
const dialect_1 = require("../pg-core/dialect");
const session_1 = require("./session");
class NeonDriver {
    constructor(client, dialect, options = {}) {
        this.client = client;
        this.dialect = dialect;
        this.options = options;
        this.initMappers();
    }
    createSession() {
        return new session_1.NeonSession(this.client, this.dialect, { logger: this.options.logger });
    }
    initMappers() {
        serverless_1.types.setTypeParser(serverless_1.types.builtins.TIMESTAMPTZ, (val) => val);
        serverless_1.types.setTypeParser(serverless_1.types.builtins.TIMESTAMP, (val) => val);
        serverless_1.types.setTypeParser(serverless_1.types.builtins.DATE, (val) => val);
    }
}
exports.NeonDriver = NeonDriver;
function drizzle(client, config = {}) {
    const dialect = new dialect_1.PgDialect();
    let logger;
    if (config.logger === true) {
        logger = new logger_1.DefaultLogger();
    }
    else if (config.logger !== false) {
        logger = config.logger;
    }
    const driver = new NeonDriver(client, dialect, { logger });
    const session = driver.createSession();
    return new db_1.PgDatabase(dialect, session);
}
exports.drizzle = drizzle;
//# sourceMappingURL=driver.js.map