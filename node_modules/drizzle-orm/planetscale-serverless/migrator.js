"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.migrate = void 0;
const migrator_1 = require("../migrator");
const sql_1 = require("../sql");
function migrate(db, config) {
    return __awaiter(this, void 0, void 0, function* () {
        const migrations = (0, migrator_1.readMigrationFiles)(config);
        const migrationTableCreate = (0, sql_1.sql) `CREATE TABLE IF NOT EXISTS \`__drizzle_migrations\` (
		id SERIAL PRIMARY KEY,
		hash text NOT NULL,
		created_at bigint
	)`;
        yield db.session.execute(migrationTableCreate);
        const dbMigrations = yield db.session.all((0, sql_1.sql) `SELECT id, hash, created_at FROM \`__drizzle_migrations\` ORDER BY created_at DESC LIMIT 1`);
        const lastDbMigration = dbMigrations[0];
        const queries = [];
        for (const migration of migrations) {
            if (!lastDbMigration
                || parseInt(lastDbMigration.created_at, 10) < migration.folderMillis) {
                queries.push({ sql: migration.sql });
                queries.push({
                    sql: `INSERT INTO \`__drizzle_migrations\` (\`hash\`, \`created_at\`) VALUES(?, ?)`,
                    params: [migration.hash, migration.folderMillis],
                });
            }
        }
        yield db.session.transaction(queries);
    });
}
exports.migrate = migrate;
//# sourceMappingURL=migrator.js.map